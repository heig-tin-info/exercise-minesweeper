# Critères d'évaluation du travail pratique
%YAML 1.2
---
testing:
  build:
    $description: Le programme compile sans erreurs ni warning
    $points: [0, -5]
  unit-testing:
    function:
      $points: [0, 2]
  functional-testing:
    output-display:
      $description: L'affichage est comme demandé en NCurses
      $points: [0, 5]
    clics:
      $description: Le support des clics de souris fonctionne
      $points: [0, 3]      
code:
  architecture:
    classes:
      $description: Les classes sont bien définies et les attributs privés/publics corrects
      $points: [0, 5]        
    objects:
      $description: Les objets sont instanciés correctements (statiquement/dynamiquement), pas de fuite mémoire
      $points: [0, 3]
  algorithms:
    shuffle-board: 
      $description: L'algorithme répartition des bombes est efficace
      $points: [0, 3]      
    number-cells: 
      $description: L'algorithme de numérotation des cellules est efficace
      $points: [0, 3]           
    expand-region: 
      $description: L'algorithme pour étendre une région est efficace et fonctionnel
      $points: [0, 5]
  specifications:
    prototypes:
      $description: Les prototypes des fonctions/classes demandées sont respectés
      $points: [0, 3]
    main:
      $description: Le programme principal est minimaliste
      $points: [0, 3]
  comments:
    header:
      $description: Un en-tête programme est clairement défini
      $points: [0, 2]
      purpose:
        $description: Les commentaires sont pertinents
        $points: [0, -2]
      commented-code:
        $description: Du code est commenté
        $points: [0, -2]
  variables:
    naming:
      $description: Le noms des variables/attributs est minimaliste et explicite
      $points: [0, 2]
    scope:
      $description: La portée des variables est réduite au minimum
      $points: [0, 2]
    type:
      $description: Le type des variables est approprié
      $points: [0, 2]
  functions:
    length:
      $description: La longueur des fonctions est raisonnable
      $points: [0, -2]
    control-flow:
      $description: Les structures de contrôle sont appropriées
      $points: [0, 5]
  overall:
    dry:
      $description: Pas de répétition dans le code
      $points: [0, -5]
    kiss:
      $description: Le code est minimaliste et simple
      $points: [0, -5]
    ssot:
      $description: Pas de répétition d'information
      $points: [0, -5]
    indentation:
      $description: L'indentation du code est cohérente
      $points: [0, -5]
bonus:
  help:
    $description: Le programme dispose d'une aide
    $bonus: [0, 1]
  version:
    $description: La version du programme peut être affichée
    $bonus: [0, 1]
  extension:
    $description: La fonctionnalité du programme est étendue
    $bonus: [0, 3]
  english:
    $description: Usage de l'anglais
    $bonus: [0, 1]
